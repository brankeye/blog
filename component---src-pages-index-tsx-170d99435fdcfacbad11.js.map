{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/utils/typography.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","indexPageQuery","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","emotion__WEBPACK_IMPORTED_MODULE_2__","_components__WEBPACK_IMPORTED_MODULE_3__","ramda__WEBPACK_IMPORTED_MODULE_4__","injectGlobal","html","width","margin","body","getSiteTitle","path","getSiteDescription","getPosts","pipe","filter","post","node","frontmatter","title","length","getPostTitle","getPostSlug","props","siteTitle","siteDescription","direction","map","postTitle","slug","key","to","typography","Typography","githubTheme","rhythm","Layout","scale","styled","target","display","flex","marginLeft","marginRight","maxWidth","padding","_ref","flexDirection","justifyContent","alignItems","components_Layout"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,mCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAOAU,uBAAa,CACXC,KAAM,CACJC,MAAO,OACPC,OAAQ,GAEVC,KAAM,CACJF,MAAO,OACPC,OAAQ,KAkBZ,IAAME,EAAeC,YAAK,CAAC,OAAQ,OAAQ,eAAgB,UACrDC,EAAqBD,YAAK,CAC9B,OACA,OACA,eACA,gBAEIE,EAAWC,YACfH,YAAK,CAAC,OAAQ,oBAAqB,UACnCI,YAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,KAEhDC,EAAeV,YAAK,CAAC,OAAQ,cAAe,UAC5CW,EAAcX,YAAK,CAAC,OAAQ,SAAU,SAE7Bd,EAAA,iBAAC0B,GACd,IAAMC,EAAYd,EAAaa,GACzBE,EAAkBb,EAAmBW,GAC3C,OACEvB,EAAA,cAACG,EAAA,EAAD,CAAQuB,UAAU,UAChB1B,EAAA,wBAAKwB,GACLxB,EAAA,wBAAKyB,GACJE,YAAI,SAAAX,GACH,IAAMY,EAAYP,EAAaL,GACzBa,EAAOP,EAAYN,GACzB,OACEhB,EAAA,cAACC,EAAA,KAAD,CAAM6B,IAAKD,EAAME,GAAIF,GAClBD,IAGJf,EAASU,MAKX,IAAMxB,EAAc,gGC/DrBiC,EAAa,IAAIC,IAAWC,KAGrBC,EAASH,EAAWG,OCmBlBC,GDlBMJ,EAAWK,MCEjBC,YAAO,MAAV,CAAAC,OAAA,aAAGD,CACb,CACEE,QAAS,OACTC,KAAM,EACNC,WAAY,OACZC,YAAa,OACbC,SAAUT,EAAO,IACjBU,QAAYV,EAAO,KAAZ,IAAoBA,EAAO,MAEpC,SAAAW,GAAA,MAAgD,CAC9CC,cADFD,EAAGpB,UAEDsB,eAFFF,EAAcE,eAGZC,WAHFH,EAA8BG,eClBhCtD,EAAAG,EAAAD,EAAA,sBAAAqD","file":"component---src-pages-index-tsx-170d99435fdcfacbad11.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport { injectGlobal } from \"emotion\";\nimport { Layout, Header } from \"../components\";\nimport { pipe, path, filter, map } from \"ramda\";\n\ninjectGlobal({\n  html: {\n    width: \"100%\",\n    margin: 0\n  },\n  body: {\n    width: \"100%\",\n    margin: 0\n  }\n});\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<Object>;\n    };\n  };\n}\n\nconst getSiteTitle = path([\"data\", \"site\", \"siteMetadata\", \"title\"]);\nconst getSiteDescription = path([\n  \"data\",\n  \"site\",\n  \"siteMetadata\",\n  \"description\"\n]);\nconst getPosts = pipe(\n  path([\"data\", \"allMarkdownRemark\", \"edges\"]),\n  filter(post => post.node.frontmatter.title.length > 0)\n);\nconst getPostTitle = path([\"node\", \"frontmatter\", \"title\"]);\nconst getPostSlug = path([\"node\", \"fields\", \"slug\"]);\n\nexport default (props: Props) => {\n  const siteTitle = getSiteTitle(props);\n  const siteDescription = getSiteDescription(props);\n  return (\n    <Layout direction=\"column\">\n      <h1>{siteTitle}</h1>\n      <h6>{siteDescription}</h6>\n      {map(post => {\n        const postTitle = getPostTitle(post);\n        const slug = getPostSlug(post);\n        return (\n          <Link key={slug} to={slug}>\n            {postTitle}\n          </Link>\n        );\n      }, getPosts(props))}\n    </Layout>\n  );\n};\n\nexport const indexPageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import Typography from \"typography\";\nimport githubTheme from \"typography-theme-github\";\n\nconst typography = new Typography(githubTheme);\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils/typography\";\n\ninterface Props {\n  children: any;\n}\n\nconst Layout = styled(\"div\")(\n  {\n    display: \"flex\",\n    flex: 1,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: rhythm(24),\n    padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n  },\n  ({ direction, justifyContent, alignItems }) => ({\n    flexDirection: direction,\n    justifyContent,\n    alignItems\n  })\n);\n\nexport default Layout;\n","export { default as Layout } from \"./Layout\";\n"],"sourceRoot":""}