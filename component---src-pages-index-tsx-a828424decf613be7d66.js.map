{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/utils/selectors/index.tsx","webpack:///./src/utils/theme.tsx","webpack:///./src/utils/typography.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Anchor.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Title.tsx","webpack:///./src/components/Divider.tsx","webpack:///./src/components/Description.tsx","webpack:///./src/components/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","indexPageQuery","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","emotion__WEBPACK_IMPORTED_MODULE_2__","_components__WEBPACK_IMPORTED_MODULE_3__","_utils_selectors__WEBPACK_IMPORTED_MODULE_4__","ramda__WEBPACK_IMPORTED_MODULE_5__","injectGlobal","html","width","margin","body","props","title","getTitle","author","getAuthor","twitter","getTwitter","direction","map","post","postTitle","getPostTitle","slug","getPostSlug","key","to","getPosts","ramda__WEBPACK_IMPORTED_MODULE_0__","getSiteMetadataProp","curry","propName","input","path","pipe","filter","node","frontmatter","length","color","brighterColor","border","size","githubTheme","overrideThemeStyles","_ref","options","rhythm","backgroundColor","h1","borderBottom","h2","h6","a","textDecoration","b","strong","hr","blockquote","borderLeft","typography","Typography","Layout","scale","styled","target","display","flex","marginLeft","marginRight","maxWidth","padding","flexDirection","justifyContent","alignItems","Anchor","fontWeight","bold","noUnderline","Header","letterSpacing","textTransform","Title","Divider","height","borderColor","defaultProps","Description","react","components_Anchor","href","components_Layout","components_Header","components_Title","components_Divider","components_Description"],"mappings":"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","file":"component---src-pages-index-tsx-a828424decf613be7d66.js","sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport { injectGlobal } from \"emotion\";\nimport { Layout, Anchor, Header, Description } from \"../components\";\nimport {\n  getTitle,\n  getAuthor,\n  getTwitter,\n  getPosts,\n  getPostTitle,\n  getPostSlug\n} from \"../utils/selectors\";\nimport { map } from \"ramda\";\n\ninjectGlobal({\n  html: {\n    width: \"100%\",\n    margin: 0\n  },\n  body: {\n    width: \"100%\",\n    margin: 0\n  }\n});\n\ninterface Props {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        author: string;\n        twitter: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<Object>;\n    };\n  };\n}\n\nexport default (props: Props) => {\n  const title = getTitle(props);\n  const author = getAuthor(props);\n  const twitter = getTwitter(props);\n  return (\n    <Layout direction=\"column\">\n      <Header>{title}!</Header>\n      <Description author={author} twitter={twitter} />\n      {map(post => {\n        const postTitle = getPostTitle(post);\n        const slug = getPostSlug(post);\n        return (\n          <Link key={slug} to={slug}>\n            {postTitle}\n          </Link>\n        );\n      }, getPosts(props))}\n    </Layout>\n  );\n};\n\nexport const indexPageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        twitter\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import { pipe, path, filter, map, curry } from \"ramda\";\n\nexport const getSiteMetadataProp = curry((propName, input) =>\n  path([\"data\", \"site\", \"siteMetadata\", propName], input)\n);\nexport const getTitle = getSiteMetadataProp(\"title\");\nexport const getAuthor = getSiteMetadataProp(\"author\");\nexport const getTwitter = getSiteMetadataProp(\"twitter\");\nexport const getPosts = pipe(\n  path([\"data\", \"allMarkdownRemark\", \"edges\"]),\n  filter(post => post.node.frontmatter.title.length > 0)\n);\nexport const getPostTitle = path([\"node\", \"frontmatter\", \"title\"]);\nexport const getPostSlug = path([\"node\", \"fields\", \"slug\"]);\n","export const backgroundColor = \"hsla(0, 0%, 18%, 1)\";\nexport const color = \"hsla(0, 0%, 95%, 0.95)\";\nexport const brighterColor = \"hsla(0, 0%, 100%, 0.95)\";\nexport const linkColor = \"hsla(195, 90%, 60%, 0.95)\";\n","import Typography from \"typography\";\nimport githubTheme from \"typography-theme-github\";\nimport { backgroundColor, color, brighterColor, linkColor } from \"./theme\";\n\nconst border = size => `${size}px solid ${brighterColor}`;\n\ngithubTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  body: {\n    backgroundColor,\n    color\n  },\n  h1: {\n    borderBottom: border(3)\n  },\n  h2: {\n    borderBottom: border(1)\n  },\n  h6: {\n    color\n  },\n  a: {\n    color: linkColor,\n    textDecoration: \"none\"\n  },\n  b: {\n    color: brighterColor\n  },\n  strong: {\n    color: brighterColor\n  },\n  hr: {\n    color: brighterColor\n  },\n  blockquote: {\n    color,\n    borderLeft: border(4)\n  }\n});\n\nconst typography = new Typography(githubTheme);\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils/typography\";\n\ninterface Props {\n  children: any;\n}\n\nconst Layout = styled(\"div\")(\n  {\n    display: \"flex\",\n    flex: 1,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: rhythm(30),\n    padding: `${rhythm(1.5)} ${rhythm(0.75)}`\n  },\n  ({ direction, justifyContent, alignItems }) => ({\n    flexDirection: direction,\n    justifyContent,\n    alignItems\n  })\n);\n\nexport default Layout;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils/typography\";\n\ninterface Props {\n  children: any;\n}\n\nconst Anchor = styled(\"a\")(({ bold, noUnderline }) => ({\n  fontWeight: bold ? \"bold\" : \"normal\",\n  textDecoration: noUnderline ? \"none\" : \"underline\"\n}));\n\nexport default Anchor;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils/typography\";\n\nconst Header = styled(\"h1\")({\n  letterSpacing: 5,\n  textTransform: \"uppercase\"\n});\n\nexport default Header;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils/typography\";\n\ninterface Props {\n  children: any;\n}\n\nconst Title = styled(\"h1\")({\n  borderBottom: \"none\"\n});\n\nexport default Title;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils\";\nimport { brighterColor } from \"../utils/theme\";\n\nconst Divider = styled(\"hr\")(({ height }) => ({\n  backgroundColor: brighterColor,\n  borderColor: brighterColor,\n  height\n}));\n\nDivider.defaultProps = {\n  height: 4\n};\n\nexport default Divider;\n","import * as React from \"react\";\nimport styled from \"react-emotion\";\nimport { rhythm } from \"../utils/typography\";\nimport Anchor from \"./Anchor\";\n\ninterface Props {\n  author: string;\n  twitter: string;\n}\n\nconst Description = ({ author, twitter }: Props) => (\n  <p>\n    A tech blog by <strong>{author}</strong> in which he neither publishes\n    nightly nor plays the bugle. <br />\n    You can{\" \"}\n    <Anchor href={twitter} noUnderline>\n      yell at him on Twitter\n    </Anchor>{\" \"}\n    if you'd like.\n  </p>\n);\n\nexport default Description;\n","export { default as Layout } from \"./Layout\";\nexport { default as Anchor } from \"./Anchor\";\nexport { default as Header } from \"./Header\";\nexport { default as Title } from \"./Title\";\nexport { default as Divider } from \"./Divider\";\nexport { default as Description } from \"./Description\";\n"],"sourceRoot":""}